{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card-header\"\n}, \" Exam04ProvideInject \", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card-body\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = [_hoisted_2, _hoisted_3];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_4);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;;;gCACPC,oBAEM,KAFN,EAEM;EAFDD,KAAK,EAAG;AAEP,CAFN,EAA2B,uBAA3B,EAEA;AAAA;AAFA;;gCAGAC,oBAEM,KAFN,EAEM;EAFDD,KAAK,EAAC;AAEL,CAFN,EAAsB,IAAtB,EAAsB;AAAA;AAAtB;;oBAHAE,YAGAC;;uBAJJC,oBAOM,KAPN,cAOMC,UAPN","names":["class","_createElementVNode","_hoisted_2","_hoisted_3","_createElementBlock","_hoisted_4"],"sourceRoot":"","sources":["/Users/jbc/Desktop/osstem/projects/node-workspace/front-end-vue/front-end-vue/src/views/menu04/Exam03ProvideInject/index.vue"],"sourcesContent":["<template>\n    <div class=\"card\">\n        <div class = \"card-header\">\n            Exam04ProvideInject\n        </div>\n        <div class=\"card-body\">\n\n        </div>\n    </div>\n\n</template>\n\n<script setup>\n    import { ref, reactive, provide } from \"vue\";\n    \n    // 조상이 모든 자손 컴포넌트에게 데이터를 제공, 및 자식은 이용하고자하는 데이터를 주입한다. \n    const data1 = ref(\"parent-value1\");\n    const data2 = ref({name1: \"parent-value2\", name2: \"parent-value3\"});\n    const data3 = reactive({name3: \"parent-vlaue3\", name4: \"parent-value4\"});\n\n    // 객체 이름과 데이터 이름이 동일 할 떄는 생략가능하다. 본래 아래 코드의 값은 data1:data1, data2\n    provide(\"message\", {data1, data2, data3})\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}