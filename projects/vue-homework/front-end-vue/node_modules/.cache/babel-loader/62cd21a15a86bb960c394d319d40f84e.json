{"ast":null,"code":"export default {\n  namespaced: true,\n  state: {\n    count: 0\n  },\n  getters: {\n    getCount(state, getters, rootState, rootGetters) {\n      return state.count;\n    }\n\n  },\n  mutations: {\n    setCount(state, payload) {\n      state.count += payload;\n    }\n\n  },\n  actions: {\n    setCountByAsync(context, payload) {\n      new Promise((resolve, reject) => {\n        //정상 실행 시 아래 코드가 동작한다.\n        setTimeout(() => {\n          resolve(payload.value); //payload는 시간이다.\n        }, payload.duration);\n      }).then(data => {\n        //mutation 사용을 위해서는 comiit을 사용해야 한다.\n        context.commit(\"setCount\", data);\n        console.log(\"count 상태 변경 성공\");\n      }).catch(error => {\n        //예외가 발생해거나 reejct된 경우\n        console.log(\"에러\");\n      });\n    }\n\n  }\n};","map":{"version":3,"names":["namespaced","state","count","getters","getCount","rootState","rootGetters","mutations","setCount","payload","actions","setCountByAsync","context","Promise","resolve","reject","setTimeout","value","duration","then","data","commit","console","log","catch","error"],"sources":["/Users/jbc/Desktop/osstem/projects/node-workspace/oss_Vue_study/front-end-vue/front-end-vue/src/store/counter.js"],"sourcesContent":["\nexport default {\n    namespaced: true,\n\n    state: {\n        count: 0,\n    },\n\n    getters: {\n        getCount(state, getters, rootState, rootGetters) {\n            return state.count;\n        },\n    },\n\n    mutations: {\n        setCount(state, payload) {\n            state.count += payload;\n        },\n    },\n\n    actions: {\n        setCountByAsync(context, payload) {\n            new Promise((resolve, reject) => {\n                //정상 실행 시 아래 코드가 동작한다.\n                setTimeout(() => {\n                    resolve(payload.value);\n                    //payload는 시간이다.\n                }, payload.duration);\n            })\n                .then((data) => {\n                    //mutation 사용을 위해서는 comiit을 사용해야 한다.\n                    context.commit(\"setCount\", data);\n                    console.log(\"count 상태 변경 성공\");\n                })\n                .catch((error) => {\n                    //예외가 발생해거나 reejct된 경우\n                    console.log(\"에러\");\n                });\n        }\n    },\n\n};\n"],"mappings":"AACA,eAAe;EACXA,UAAU,EAAE,IADD;EAGXC,KAAK,EAAE;IACHC,KAAK,EAAE;EADJ,CAHI;EAOXC,OAAO,EAAE;IACLC,QAAQ,CAACH,KAAD,EAAQE,OAAR,EAAiBE,SAAjB,EAA4BC,WAA5B,EAAyC;MAC7C,OAAOL,KAAK,CAACC,KAAb;IACH;;EAHI,CAPE;EAaXK,SAAS,EAAE;IACPC,QAAQ,CAACP,KAAD,EAAQQ,OAAR,EAAiB;MACrBR,KAAK,CAACC,KAAN,IAAeO,OAAf;IACH;;EAHM,CAbA;EAmBXC,OAAO,EAAE;IACLC,eAAe,CAACC,OAAD,EAAUH,OAAV,EAAmB;MAC9B,IAAII,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;QAC7B;QACAC,UAAU,CAAC,MAAM;UACbF,OAAO,CAACL,OAAO,CAACQ,KAAT,CAAP,CADa,CAEb;QACH,CAHS,EAGPR,OAAO,CAACS,QAHD,CAAV;MAIH,CAND,EAOKC,IAPL,CAOWC,IAAD,IAAU;QACZ;QACAR,OAAO,CAACS,MAAR,CAAe,UAAf,EAA2BD,IAA3B;QACAE,OAAO,CAACC,GAAR,CAAY,gBAAZ;MACH,CAXL,EAYKC,KAZL,CAYYC,KAAD,IAAW;QACd;QACAH,OAAO,CAACC,GAAR,CAAY,IAAZ;MACH,CAfL;IAgBH;;EAlBI;AAnBE,CAAf"},"metadata":{},"sourceType":"module"}