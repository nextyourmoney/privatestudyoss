{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card-header\"\n}, \" Exam02CounterState \", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  class: \"card-body\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"userId 양방향 바인딩: \");\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h6\", null, \"[counter State 변경]\", -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"증가값 입력: \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"p\", null, \"userId 단방향 바인딩: \" + _toDisplayString(_ctx.$store.state.counter.count), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, \"userId 단방향 바인딩: \" + _toDisplayString($setup.store.state.counter.count), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, \"userId 단방향 바인딩: \" + _toDisplayString(_ctx.$store.getters[\"counter/getCount\"]), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, \"userId 단방향 바인딩: \" + _toDisplayString($setup.getCount()), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, \"userId 단방향 바인딩: \" + _toDisplayString($setup.computedCount), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.$store.state.counter = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.$store.state.counter]])]), _hoisted_5, _hoisted_6, _createElementVNode(\"p\", null, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.value = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.value, void 0, {\n    number: true\n  }]])]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: $setup.changeCountByMutaion,\n    class: \"btn btn-info btn-sm mr-2\"\n  }, \"userId 변경(mutation동기 방식)\"), _createElementVNode(\"button\", {\n    onClick: $setup.changeCountByAction,\n    class: \"btn btn-info btn-sm mr-2\"\n  }, \"userId 변경(action 비동기 방식) \")])])]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;;;gCACPC,oBAEM,KAFN,EAEM;EAFDD,KAAK,EAAG;AAEP,CAFN,EAA2B,sBAA3B,EAEA;AAAA;AAFA;;;EAGKA,KAAK,EAAC;;;iDAMJ;;gCAEPC,oBAAK,IAAL,EAAK,IAAL,EAAK,IAAL,EAAK;AAAA;AAAL;;gCACIA,oBAA2B,IAA3B,EAA2B,IAA3B,EAAI,oBAAJ,EAAsB;AAAA;AAAtB;;iDACG;;;uBAdXC,oBAsBM,KAtBN,cAsBM,CArBFC,UAqBE,EAlBFF,oBAiBM,KAjBN,cAiBM,CAhBFA,oBAAqD,GAArD,EAAqD,IAArD,EAAG,qBAAgBG,iBAAEC,YAAOC,KAAP,CAAaC,OAAb,CAAqBC,KAAvB,CAAnB,EAA+C;EAAA;EAA/C,CAgBE,EAfFP,oBAAoD,GAApD,EAAoD,IAApD,EAAG,qBAAgBG,iBAAEK,aAAMH,KAAN,CAAYC,OAAZ,CAAoBC,KAAtB,CAAnB,EAA8C;EAAA;EAA9C,CAeE,EAdFP,oBAA6D,GAA7D,EAA6D,IAA7D,EAAG,qBAAgBG,iBAAEC,YAAOK,OAAP,CAAc,kBAAd,CAAF,CAAnB,EAAmC;EAAA;EAAnC,CAcE,EAbFT,oBAAqC,GAArC,EAAqC,IAArC,EAAG,qBAAgBG,iBAAEK,iBAAF,CAAnB,EAA6B;EAAA;EAA7B,CAaE,EAZFR,oBAAwC,GAAxC,EAAwC,IAAxC,EAAG,qBAAgBG,iBAAEK,oBAAF,CAAnB,EAAkC;EAAA;EAAlC,CAYE,EAXFR,oBAA0E,GAA1E,EAA0E,IAA1E,EAA0E,6BAAvDA,oBAAmD,OAAnD,EAAmD;IAA5CU,IAAI,EAAC,MAAuC;+DAAvBN,YAAOC,KAAP,CAAaC,UAAOK;EAAG,CAAnD;;EAAA,kBAA4BP,YAAOC,KAAP,CAAaC,UAAc,CAA1E,CAWE,EATNM,UASM,EARFC,UAQE,EAPFb,oBAEI,GAFJ,EAEI,IAFJ,EAEI,6BADAA,oBAA6C,OAA7C,EAA6C;IAAtCU,IAAI,EAAG,MAA+B;+DAARF,eAAKG;EAAG,CAA7C;;EAAA,kBAAqCH;YAAhB;MACrB,CAFJ,CAOE,EAJFR,oBAGM,KAHN,EAGM,IAHN,EAGM,CAFFA,oBAA0G,QAA1G,EAA0G;IAAjGc,OAAK,EAAEN,2BAA0F;IAApET,KAAK,EAAG;EAA4D,CAA1G,EAAyE,0BAAzE,CAEE,EADFC,oBAA0G,QAA1G,EAA0G;IAAjGc,OAAK,EAAEN,0BAA0F;IAArET,KAAK,EAAG;EAA6D,CAA1G,EAAwE,2BAAxE,CACE,CAHN,CAIE,CAjBN,CAkBE,CAtBN","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","_toDisplayString","_ctx","state","counter","count","$setup","getters","type","$event","_hoisted_5","_hoisted_6","onClick"],"sourceRoot":"","sources":["/Users/jbc/Desktop/osstem/projects/node-workspace/oss_Vue_study/front-end-vue/front-end-vue/src/views/menu06/Exam02CounterState.vue"],"sourcesContent":["<template>\n    <div class=\"card\">\n        <div class = \"card-header\">\n            Exam02CounterState\n        </div>\n        <div class=\"card-body\">\n            <p>userId 단방향 바인딩: {{$store.state.counter.count}}</p>\n            <p>userId 단방향 바인딩: {{store.state.counter.count}}</p>\n            <p>userId 단방향 바인딩: {{$store.getters[\"counter/getCount\"]}}</p>\n            <p>userId 단방향 바인딩: {{getCount()}}</p>\n            <p>userId 단방향 바인딩: {{computedCount}}</p>\n            <p>userId 양방향 바인딩: <input type=\"text\" v-model=\"$store.state.counter\"/></p>\n        \n        <hr/>\n            <h6>[counter State 변경]</h6>\n            <p>증가값 입력:\n                <input type = \"text\" v-model.number=\"value\"/>\n            </p>\n            <div>\n                <button @click=\"changeCountByMutaion\" class = \"btn btn-info btn-sm mr-2\">userId 변경(mutation동기 방식)</button>\n                <button @click=\"changeCountByAction\" class = \"btn btn-info btn-sm mr-2\">userId 변경(action 비동기 방식) </button>\n            </div>\n        </div>\n    </div>\n\n</template>\n\n<script setup>\n    import { useStore } from \"vuex\";\n    import { computed, ref } from \"vue\";\n\n    const store = useStore();\n\n    function getCount(){\n        return store.state.counter.count;\n        //return store.getters[\"counter/getCount\"];\n    }\n\n    const computedCount = computed(()=>{\n        return store.state.counter.count;\n        //return store.getters[\"counter/getCount\"];\n    });\n\n    const value = ref(1);\n\n    function changeCountByMutaion(){\n        store.commit(\"counter/setCount\", value.value);\n    }\n\n    function changeCountByAction(){\n        store.dispatch(\"counter/setCountByAsync\", {value:value.value, duration:3000})\n    }\n\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}