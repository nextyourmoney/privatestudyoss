{"ast":null,"code":"import apiBoard from \"@/apis/board\";\nimport { ref, watch } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\"; //반응형 속성 선언\n\nexport default {\n  setup(__props, {\n    expose\n  }) {\n    expose(); //import {getBoardList} from \"@/apis/board\";\n\n    const page = ref(null);\n    const route = useRoute();\n    const router = useRouter(); //라우팅시에 전달된 query String에서 pageNo을 읽기\n\n    let pageNo = route.query.pageNo; //페이지가 없을 경우 디폴트로 1을 선언한다. \n\n    if (pageNo === \"undefined\") {\n      pageNo = 1;\n    } //rest api와 통신하여 페이지에 대한 정보(게시물 목록 + 페이지)를 가져온다. 이때 page라는 반응형 속성에 저장한다. \n\n\n    async function getBoardList(pageNo) {\n      //apis의 function이 비동기 방식이므로 반드시 await으로 호출해야 한다. \n      const result = await apiBoard.getBoardList(pageNo);\n\n      if (result != null) {\n        page.value = result;\n        console.log(page.value);\n        console.log(\"good\");\n      }\n    }\n\n    getBoardList(pageNo);\n\n    function range(start, end) {\n      const numbers = [];\n\n      for (var i = start; i <= end; i++) {\n        numbers.push(i);\n      }\n\n      return numbers;\n    }\n\n    function changePageNo(pageNo) {\n      router.push(`/menu07/board/list?pageNo=${pageNo}`);\n    }\n\n    watch(route, (newUrl, oldUrl) => {\n      if (newUrl.path === \"/menu07/board/list\") {\n        if (newUrl.query.pageNo) {\n          getBoardList(newUrl.query.pageNo);\n        } else {\n          getBoardList(1);\n        }\n      }\n    });\n    const __returned__ = {\n      page,\n      route,\n      router,\n      pageNo,\n      getBoardList,\n      range,\n      changePageNo,\n      apiBoard,\n      ref,\n      watch,\n      useRoute,\n      useRouter\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AA8CI,OAAOA,QAAP,MAAqB,cAArB;AACA,SAAQC,GAAR,EAAaC,KAAb,QAAyB,KAAzB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAmC,YAAnC,C,CAEA;;;;;;cALA;;IAMA,MAAMC,IAAI,GAAGJ,GAAG,CAAC,IAAD,CAAhB;IACA,MAAMK,KAAK,GAAGH,QAAQ,EAAtB;IACA,MAAMI,MAAM,GAAGH,SAAS,EAAxB,EAGA;;IACA,IAAII,MAAM,GAAGF,KAAK,CAACG,KAAN,CAAYD,MAAzB,EAEA;;IACA,IAAGA,MAAM,KAAK,WAAd,EAA0B;MACtBA,MAAM,GAAG,CAAT;IACH,EAED;;;IACA,eAAeE,YAAf,CAA4BF,MAA5B,EAAmC;MAC/B;MACA,MAAMG,MAAM,GAAG,MAAMX,QAAQ,CAACU,YAAT,CAAsBF,MAAtB,CAArB;;MACA,IAAGG,MAAM,IAAG,IAAZ,EAAiB;QACbN,IAAI,CAACO,KAAL,GAAaD,MAAb;QACAE,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACO,KAAjB;QACAC,OAAO,CAACC,GAAR,CAAY,MAAZ;MACH;IACJ;;IACDJ,YAAY,CAACF,MAAD,CAAZ;;IAEA,SAASO,KAAT,CAAeC,KAAf,EAAsBC,GAAtB,EAA0B;MACtB,MAAMC,OAAO,GAAG,EAAhB;;MACA,KAAI,IAAIC,CAAC,GAAGH,KAAZ,EAAmBG,CAAC,IAAIF,GAAxB,EAA6BE,CAAC,EAA9B,EAAiC;QAC7BD,OAAO,CAACE,IAAR,CAAaD,CAAb;MACH;;MACD,OAAOD,OAAP;IACH;;IAED,SAASG,YAAT,CAAsBb,MAAtB,EAA6B;MACzBD,MAAM,CAACa,IAAP,CAAa,6BAA4BZ,MAAO,EAAhD;IACH;;IAEDN,KAAK,CAACI,KAAD,EAAQ,CAACgB,MAAD,EAASC,MAAT,KAAoB;MAC7B,IAAGD,MAAM,CAACE,IAAP,KAAgB,oBAAnB,EAAwC;QACpC,IAAGF,MAAM,CAACb,KAAP,CAAaD,MAAhB,EAAuB;UACnBE,YAAY,CAACY,MAAM,CAACb,KAAP,CAAaD,MAAd,CAAZ;QACH,CAFD,MAEM;UACFE,YAAY,CAAC,CAAD,CAAZ;QACH;MACJ;IACJ,CARI,CAAL","names":["apiBoard","ref","watch","useRoute","useRouter","page","route","router","pageNo","query","getBoardList","result","value","console","log","range","start","end","numbers","i","push","changePageNo","newUrl","oldUrl","path"],"sources":["/Users/jbc/Desktop/osstem/projects/node-workspace/oss_Vue_study/front-end-vue/front-end-vue/src/views/menu07/board/List.vue"],"sourcesContent":["<template>\n    <div class=\"card\">\n        <div class = \"card-header\">\n            list Board\n        </div>\n        <div class=\"card-body\">\n            <!-- page처리 시 null을 binding 할 수 없기 때문이다. //setup 구성 전에 dom이 생성 될 수 있기 때문에 에러가 발생할 수도 있다.  -->\n            <div v-if=\"page != null\"> \n                <div class = \"mb-3\">\n                    <router-link to=\"/menu07/board/writeForm\" class=\"btn btn-info btn-sm mr-2\"> 생성 </router-link>\n                </div>  \n                \n                <table class=\"table table-sm table-striped table-bordered\">\n                    <thead>\n                        <tr>\n                        <th class=\"text-center\" style=\"width:70px\">번호</th>\n                        <th class=\"text-center\">제목</th>\n                        <th class=\"text-center\" style=\"width:90px\">글쓴이</th>\n                        <th class=\"text-center\" style=\"width:120px\">날짜</th>\n                        <th class=\"text-center\" style=\"width:70px\">조회수</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr v-for=\"board in page.boards\" :key=\"board.bno\">\n                            <td class=\"text-center\">{{board.bno}}</td>\n                            <td >{{board.btitle}}</td>\n                            <td >{{board.mid}}</td>\n                            <td >{{new Date(board.bdate).toLocaleDateString()}}</td>\n                            <td >{{board.bhitcount}}</td>\n                        </tr>\n                        <tr colspan=\"5\" class=\"text-center\">\n                            <button @click=\"changePageNo(1)\"    class = \"btn btn-outline-primary btn-sm mr-1\">처음</button>\n                            <button v-if=\"page.pager.groupNo > 1\" @click=\"changePageNo(page.pager.startPageNo-1)\" class = \"btn btn-outline-info btn-sm mr-1\">이전</button>\n                            <button v-for = \"pageNo in range(page.pager.startPageNo, page.pager.endPageNo)\" :key=\"pageNo\" class = \"btn btn-outline-success btn-sm mr-1\">{{pageNo}}</button>\n                            <button v-if=\"page.pager.groupNo < page.pager.totalGroupNo\" @click=\"changePageNo(page.pager.endPageNo+1)\" class = \"btn btn-outline-info btn-sm mr-1\">다음</button>\n                            <button @click=\"changePageNo(page.pager.totalPageNo)\" class = \"btn btn-outline-primary btn-sm mr-1\">맨끝</button>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script setup>\n    //import {getBoardList} from \"@/apis/board\";\n    import apiBoard from \"@/apis/board\"; \n    import {ref, watch} from \"vue\";\n    import {useRoute, useRouter } from \"vue-router\";\n\n    //반응형 속성 선언\n    const page = ref(null);\n    const route = useRoute();\n    const router = useRouter();\n\n\n    //라우팅시에 전달된 query String에서 pageNo을 읽기\n    let pageNo = route.query.pageNo;\n\n    //페이지가 없을 경우 디폴트로 1을 선언한다. \n    if(pageNo === \"undefined\"){\n        pageNo = 1;\n    }\n\n    //rest api와 통신하여 페이지에 대한 정보(게시물 목록 + 페이지)를 가져온다. 이때 page라는 반응형 속성에 저장한다. \n    async function getBoardList(pageNo){\n        //apis의 function이 비동기 방식이므로 반드시 await으로 호출해야 한다. \n        const result = await apiBoard.getBoardList(pageNo);\n        if(result !=null){\n            page.value = result;\n            console.log(page.value);\n            console.log(\"good\");\n        } \n    }\n    getBoardList(pageNo);\n\n    function range(start, end){\n        const numbers = [];\n        for(var i = start; i <= end; i++){\n            numbers.push(i);\n        }\n        return numbers;\n    }\n\n    function changePageNo(pageNo){\n        router.push(`/menu07/board/list?pageNo=${pageNo}`);\n    }\n\n    watch(route, (newUrl, oldUrl) => {\n        if(newUrl.path === \"/menu07/board/list\"){\n            if(newUrl.query.pageNo){\n                getBoardList(newUrl.query.pageNo);\n            } else{\n                getBoardList(1);\n            }\n        }\n    })\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}