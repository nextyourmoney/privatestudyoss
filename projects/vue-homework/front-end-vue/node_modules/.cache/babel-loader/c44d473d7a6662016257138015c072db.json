{"ast":null,"code":"import { reject } from 'core-js/fn/promise';\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    userId: \"\"\n  },\n  getters: {\n    getUserId(state, getters, rootState, rootGetters) {\n      return state.userId;\n    }\n\n  },\n  mutations: {\n    setUserId(state, payload) {\n      state.userId = payload;\n    }\n\n  },\n  actions: {\n    setUserIdByAsync(context, payload) {\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          //시간을 요구하는 작업\n          context.commit(\"setUserId\", payload.userId); //성공적으로 응답을 얻었을 경우\n\n          resolve(payload.userId);\n        }, payload.duration);\n      }) //mutations을 이용해서 상태값 변경\n      .then(data => {\n        context.commit(\"setUserId\", data);\n        console.log(\"userId 상태 변경 성공\");\n      }) //예외가 발생했거나, reject된 경우\n      .catch(error => {\n        console.log(\"userId 상태 변경 실패\");\n      });\n    }\n\n  },\n  modules: {}\n});","map":{"version":3,"names":["reject","createStore","state","userId","getters","getUserId","rootState","rootGetters","mutations","setUserId","payload","actions","setUserIdByAsync","context","Promise","resolve","setTimeout","commit","duration","then","data","console","log","catch","error","modules"],"sources":["/Users/jbc/Desktop/osstem/projects/node-workspace/front-end-vue/front-end-vue/src/store/index.js"],"sourcesContent":["import { reject } from 'core-js/fn/promise';\nimport { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    userId: \"\"\n  },\n  getters: {\n    getUserId(state, getters, rootState, rootGetters) {\n      return state.userId;\n    }\n  },\n  mutations: {\n    setUserId(state, payload) {\n      state.userId = payload;\n    }\n  },\n  actions: {\n    setUserIdByAsync(context, payload) {\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          //시간을 요구하는 작업\n          context.commit(\"setUserId\", payload.userId);\n          //성공적으로 응답을 얻었을 경우\n          resolve(payload.userId);\n        }, payload.duration);\n      })\n        //mutations을 이용해서 상태값 변경\n        .then((data) => {\n          context.commit(\"setUserId\", data);\n          console.log(\"userId 상태 변경 성공\");\n        })\n        //예외가 발생했거나, reject된 경우\n        .catch((error) => {\n          console.log(\"userId 상태 변경 실패\");\n        });\n      }\n    },\n    modules: {\n    }\n  })\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,oBAAvB;AACA,SAASC,WAAT,QAA4B,MAA5B;AAEA,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,MAAM,EAAE;EADH,CADkB;EAIzBC,OAAO,EAAE;IACPC,SAAS,CAACH,KAAD,EAAQE,OAAR,EAAiBE,SAAjB,EAA4BC,WAA5B,EAAyC;MAChD,OAAOL,KAAK,CAACC,MAAb;IACD;;EAHM,CAJgB;EASzBK,SAAS,EAAE;IACTC,SAAS,CAACP,KAAD,EAAQQ,OAAR,EAAiB;MACxBR,KAAK,CAACC,MAAN,GAAeO,OAAf;IACD;;EAHQ,CATc;EAczBC,OAAO,EAAE;IACPC,gBAAgB,CAACC,OAAD,EAAUH,OAAV,EAAmB;MACjC,IAAII,OAAJ,CAAY,CAACC,OAAD,EAAUf,MAAV,KAAqB;QAC/BgB,UAAU,CAAC,MAAM;UACf;UACAH,OAAO,CAACI,MAAR,CAAe,WAAf,EAA4BP,OAAO,CAACP,MAApC,EAFe,CAGf;;UACAY,OAAO,CAACL,OAAO,CAACP,MAAT,CAAP;QACD,CALS,EAKPO,OAAO,CAACQ,QALD,CAAV;MAMD,CAPD,EAQE;MARF,CASGC,IATH,CASSC,IAAD,IAAU;QACdP,OAAO,CAACI,MAAR,CAAe,WAAf,EAA4BG,IAA5B;QACAC,OAAO,CAACC,GAAR,CAAY,iBAAZ;MACD,CAZH,EAaE;MAbF,CAcGC,KAdH,CAcUC,KAAD,IAAW;QAChBH,OAAO,CAACC,GAAR,CAAY,iBAAZ;MACD,CAhBH;IAiBC;;EAnBI,CAdgB;EAmCvBG,OAAO,EAAE;AAnCc,CAAD,CAA1B"},"metadata":{},"sourceType":"module"}