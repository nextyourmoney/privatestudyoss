{"ast":null,"code":"import { ref } from \"vue\";\nexport default {\n  setup(__props, {\n    expose\n  }) {\n    expose(); //반응형 속성 선언\n\n    const data1 = ref(\"value1\");\n    const __returned__ = {\n      data1,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAqBI,SAASA,GAAT,QAAoB,KAApB;;;;;cADA;;IAEA,MAAMC,KAAK,GAAGD,GAAG,CAAC,QAAD,CAAjB","names":["ref","data1"],"sources":["/Users/jbc/Desktop/osstem/projects/node-workspace/front-end-vue/front-end-vue/src/views/menu04/Exam02EventEmit/Child.vue"],"sourcesContent":["<template>\n    <div class=\"card\">\n        <div class = \"card-header\">\n            Child\n        </div>\n        <div class=\"card-body\">\n            <div>\n                <h6>[자식에서 부모로]</h6>\n                <!-- child-event-1 이벤트를 발생시키고 data1을 전송한다.  -->\n                <button @click=\"$emit('child-event-1', data1)\" class =\"btn btn-sm btn-info mr-2\">child-event-1 emit</button>\n                <button @click=\"handleChildEmit2\" class =\"btn btn-sm btn-info mr-2\">child-event-1 emit</button>\n                \n            </div>\n\n        </div>\n    </div>\n\n</template>\n\n<script setup>\n    //반응형 속성 선언\n    import { ref } from \"vue\";\n    const data1 = ref(\"value1\");\n    \n</script>\n\n<style scoped>\n\n</style>\n\n"]},"metadata":{},"sourceType":"module"}