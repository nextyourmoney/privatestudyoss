{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card-header\"\n}, \" SetupHook \", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  class: \"card-body\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleBtn && _ctx.handleBtn(...args)),\n    class: \"btn-info btn-sm btn mr-2\"\n  }, \"버튼\")])]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;;;gCACPC,oBAEM,KAFN,EAEM;EAFDD,KAAK,EAAG;AAEP,CAFN,EAA2B,aAA3B,EAEA;AAAA;AAFA;;;EAGKA,KAAK,EAAC;;;uBAJfE,oBAQM,KARN,cAQM,CAPFC,UAOE,EAJFF,oBAGM,KAHN,cAGM,CAFFA,oBAAyE,QAAzE,EAAyE;IAAhEG,OAAK,yCAAEC,yCAAF,CAA2D;IAA9CL,KAAK,EAAG;EAAsC,CAAzE,EAA8D,IAA9D,CAEE,CAHN,CAIE,CARN","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","onClick","_ctx"],"sourceRoot":"","sources":["/Users/jbc/Desktop/osstem/projects/node-workspace/front-end-vue/front-end-vue/src/views/menu05/Exam01LifeCycleHooks/SetupHook.vue"],"sourcesContent":["<template>\n    <div class=\"card\">\n        <div class = \"card-header\">\n            SetupHook\n        </div>\n        <div class=\"card-body\">\n            <button @click=\"handleBtn\" class = \"btn-info btn-sm btn mr-2\">버튼</button>\n\n        </div>\n    </div>\n\n</template>\n\n<script>\nimport { ref } from \"vue\";\n    export default{\n        //props 선언 //아래 setup에서 선언 시 재정의가 되기 때문에 값이 없는 것으로 나온다. \n        props: [\"prop1\"],\n\n        //이벤트 선언\n        \n        \n\n        //setup() 훅 재정의  //이러한 방식의 비추천하는 방식이다.\n        setup(props){\n            console.log(\"created 상태가 될 떄 실행\");\n            //props 선언\n            console.log(props);\n            //반응형 속성 선언\n            const count = \"ref(0)\"\n            //이벤트 핸들러 선언\n            function handleBtn(){\n                console.log(\"handleBtn\");\n            }\n        },\n    }\n\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}