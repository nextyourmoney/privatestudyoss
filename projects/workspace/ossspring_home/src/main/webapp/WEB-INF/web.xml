<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns="http://xmlns.jcp.org/xml/ns/javaee" 
xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" version="4.0">
<!-- WAS가 전부 해석 -->


   <!-- ContextLoaderListener가 Root WebApplicationContext를 생성할 때 사용할 Spring 설정 파일의 위치 설정 -->
   <context-param>
      <param-name>contextConfigLocation</param-name><!-- 키,값  여러가지 작성하는게 가능-->
      <param-value>classpath:spring/root/*.xml</param-value>
      <!--<param-value>/WEB-INF/spring/root/root-context.xml</param-value>  --><!--해당 경로의 xml정보를 이용해서  WebApplication context를 만들고 객체를 생성한다,*로 경로에 있는것 다 불러올수 있음 -->
   </context-param>
   
   <!-- 웹 애플리케이션이 시작될때와 종료 될때 Root WebApplicationContext를 생성하고 제거하기 위해 ContextLoaderListener 설정-->
   <listener>
      <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class><!-- 웹앱의 시작과 끝을 기다림 ,context param 이름을 찾아 실행-->
   </listener>

   <!-- 클라이언트의 요청을 처리하는 DispatcherServlet 설정 -->
   
   <servlet>
      <servlet-name>appServlet</servlet-name>
      <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
      <!-- DispatcherServlet이 WebApplicationContext를 생성할 때 사용할 Spring 설정 파일의 위치 설정 -->
      <init-param>
         <param-name>contextConfigLocation</param-name>
         <param-value>classpath:spring/dispatcher/*.xml</param-value>
      </init-param>
      <!-- 요청에 대해 응답속도를 빠르게 해줌 배치할때 DispatcherServlet 객체를 미리 생성하도록 설정 -->
      <load-on-startup>1</load-on-startup>
   </servlet>
   <!-- 앞에는 ContextPath가 생략되어 있으며 / 경로를 받아서 처리함 http://localhost:8080/mybapp/*이런 URL로 요청할 경우 모두 처리 -->
   <servlet-mapping>
      <servlet-name>appServlet</servlet-name>
      <url-pattern>/</url-pattern>
   </servlet-mapping>
   <!-- 클라이언트가 POST방식으로 한글을 보냇을 때 한글을 복원시키는 Filter 추가 -->
   <filter>
      <filter-name>encodingFilter</filter-name>
      <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
      <init-param>
         <param-name>encoding</param-name>
         <param-value>UTF-8</param-value>
      </init-param>
   </filter>
   <!-- 클라이언트가  http://localhost:8080/webapp/* 이렇게 요청했을 때 CharacterEncodingFilter 처리 -->
   <filter-mapping>
      <filter-name>encodingFilter</filter-name>
      <url-pattern>/*</url-pattern>
   </filter-mapping>
</web-app>